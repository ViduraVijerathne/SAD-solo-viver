/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import com.formdev.flatlaf.FlatClientProperties;
import components.CategoryComboBox;
import controllers.ProductController;
import exceptions.EntityAlreadyExistException;
import exceptions.EntityNotFoundException;
import exceptions.ValidationException;
import model.Product;
import myInterfaces.ProductTableContainerInterface;
import myInterfaces.Refreshable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import raven.toast.Notifications;
import utils.Validator;

/**
 *
 * @author vidur
 */
public class ProductsForm extends javax.swing.JPanel implements Refreshable, ProductTableContainerInterface {

    /**
     * Creates new form ProductsForm
     */
    final ProductController controller;
    private static final Logger logger = LoggerFactory.getLogger(ProductsForm.class);
    private Product selectedProduct;

    public ProductsForm() {
        this.controller = new ProductController();
        initComponents();
        initTheme();
        productTable1.setContainer(this);
    }

    @Override
    public void refresh() {
        unitComboBox1.loadData();
        categoryComboBox1.loadData();
        productTable1.loadData();
        clearFields();
    }

    private Product getDataFromFields() {
        Product p = new Product();
        p.setName(tf_name.getText());
        p.setId(0);
        if (Validator.isValidDouble(tf_refill.getText())) {
            p.setRefillStockLimit(Double.parseDouble(tf_refill.getText()));
        }
        p.setCategory(categoryComboBox1.getSelectedCategory());
        p.setUnit(unitComboBox1.getSelectedUnit());
        p.setBarcode(tf_barcode.getText());

        return p;
    }

    public void setSelectedProduct(Product p) {
        setDataToFields(p);
        selectedProduct = p;
    }

    private void setDataToFields(Product p) {
        tf_id.setText(String.valueOf(p.getId()));
        tf_name.setText(p.getName());
        tf_refill.setText(String.valueOf(p.getRefillStockLimit()));
        tf_barcode.setText(p.getBarcode());
        unitComboBox1.setSelectUnit(p.getUnit());
        categoryComboBox1.setSelectedCategory(p.getCategory());
    }

    private void clearFields() {
        tf_name.setText("");
        tf_refill.setText("0");
        tf_barcode.setText("");
        tf_id.setText("");
        selectedProduct = null;
    }

    private void initTheme() {
        lbl_titile.putClientProperty(FlatClientProperties.STYLE, ""
                + "font:$h1.font");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_titile = new javax.swing.JLabel();
        leftFieldPanel1 = new components.LeftFieldPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tf_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tf_refill = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_barcode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        unitComboBox1 = new components.UnitComboBox();
        jLabel4 = new javax.swing.JLabel();
        categoryComboBox1 = new components.CategoryComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        productTable1 = new components.ProductTable();

        lbl_titile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_titile.setText("Products");

        jLabel1.setText("ID");
        leftFieldPanel1.add(jLabel1);

        tf_id.setText("0");
        tf_id.setEnabled(false);
        leftFieldPanel1.add(tf_id);

        jLabel2.setText("Name");
        leftFieldPanel1.add(jLabel2);

        tf_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nameActionPerformed(evt);
            }
        });
        leftFieldPanel1.add(tf_name);

        jLabel5.setText("Refilling Qantity");
        leftFieldPanel1.add(jLabel5);

        tf_refill.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        tf_refill.setText("0");
        tf_refill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_refillKeyReleased(evt);
            }
        });
        leftFieldPanel1.add(tf_refill);

        jLabel6.setText("Barcode");
        leftFieldPanel1.add(jLabel6);
        leftFieldPanel1.add(tf_barcode);

        jLabel3.setText("Unit");
        leftFieldPanel1.add(jLabel3);
        leftFieldPanel1.add(unitComboBox1);

        jLabel4.setText("Category");
        leftFieldPanel1.add(jLabel4);
        leftFieldPanel1.add(categoryComboBox1);

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        leftFieldPanel1.add(jButton1);

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        leftFieldPanel1.add(jButton2);

        jButton3.setText("Clear Fields");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        leftFieldPanel1.add(jButton3);

        jButton4.setText("Add New Unit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        leftFieldPanel1.add(jButton4);

        jButton5.setText("Add New Category");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        leftFieldPanel1.add(jButton5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_titile, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leftFieldPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productTable1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_titile)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leftFieldPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(productTable1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        AddNewUnitFrame f = new AddNewUnitFrame();
        f.setRefreshable(this);
        f.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        AddNewCategoryFrame f = new AddNewCategoryFrame();
        f.setRefreshable(this);
        f.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tf_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_nameActionPerformed

    private void tf_refillKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_refillKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_refillKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Product p = getDataFromFields();
        try {
            controller.add(p);
            Notifications.getInstance().show(Notifications.Type.SUCCESS, Notifications.Location.TOP_CENTER, "product Successfully added");
            refresh();

        } catch (ValidationException ex) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, ex.getMessage());
            logger.info(ex.getMessage());

        } catch (java.sql.SQLException ex) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, ex.getMessage());
            logger.error(ex.getMessage());

        } catch (EntityAlreadyExistException ex) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, ex.getMessage());
            logger.info(ex.getMessage());

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (selectedProduct == null) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, "select a product before update");
            return;

        }
        try {
            Product p = getDataFromFields();
            p.setId(selectedProduct.getId());
            controller.update(p);
            Notifications.getInstance().show(Notifications.Type.SUCCESS, Notifications.Location.TOP_CENTER, "product Successfully updated");
            refresh();

        } catch (ValidationException ex) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, ex.getMessage());
            logger.info(ex.getMessage());

        } catch (java.sql.SQLException ex) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, ex.getMessage());
            logger.error(ex.getMessage());

        } catch (EntityNotFoundException ex) {
            Notifications.getInstance().show(Notifications.Type.ERROR, Notifications.Location.TOP_CENTER, ex.getMessage());
            logger.info(ex.getMessage());

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private components.CategoryComboBox categoryComboBox1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lbl_titile;
    private components.LeftFieldPanel leftFieldPanel1;
    private components.ProductTable productTable1;
    private javax.swing.JTextField tf_barcode;
    private javax.swing.JTextField tf_id;
    private javax.swing.JTextField tf_name;
    private javax.swing.JFormattedTextField tf_refill;
    private components.UnitComboBox unitComboBox1;
    // End of variables declaration//GEN-END:variables
}
